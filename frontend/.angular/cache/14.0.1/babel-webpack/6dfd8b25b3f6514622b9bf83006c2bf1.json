{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../services/auth.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/material/icon\";\n\nfunction SigninComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Username is required (min 3 characters) \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SigninComponent_mat_error_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password is required (min 6 characters) \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SigninComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.error, \" \");\n  }\n}\n\nexport let SigninComponent = /*#__PURE__*/(() => {\n  class SigninComponent {\n    constructor(formBuilder, router, authService) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.authService = authService;\n      this.loading = false;\n      this.error = '';\n    }\n\n    ngOnInit() {\n      // Redirect if already logged in\n      if (this.authService.currentUserValue) {\n        this.navigateBasedOnRole();\n        return;\n      }\n\n      this.signinForm = this.formBuilder.group({\n        username: ['', [Validators.required, Validators.minLength(3)]],\n        password: ['', [Validators.required, Validators.minLength(6)]]\n      });\n    }\n\n    onSubmit() {\n      // Stop here if form is invalid\n      if (this.signinForm.invalid) {\n        return;\n      }\n\n      this.loading = true;\n      this.error = '';\n      this.authService.signin(this.signinForm.value).subscribe(response => {\n        this.loading = false;\n        this.navigateBasedOnRole();\n      }, error => {\n        this.error = 'Invalid username or password';\n        this.loading = false;\n      });\n    }\n\n    navigateBasedOnRole() {\n      const role = this.authService.getUserRole();\n\n      switch (role) {\n        case 'STUDENT':\n          this.router.navigate(['/student/home']);\n          break;\n\n        case 'TEACHER':\n          this.router.navigate(['/teacher/home']);\n          break;\n\n        default:\n          this.router.navigate(['/']);\n      }\n    }\n\n    navigateToSignup() {\n      this.router.navigate(['/signup']);\n    }\n\n  }\n\n  SigninComponent.ɵfac = function SigninComponent_Factory(t) {\n    return new (t || SigninComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n\n  SigninComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SigninComponent,\n    selectors: [[\"app-signin\"]],\n    decls: 33,\n    vars: 6,\n    consts: [[1, \"signin-container\"], [1, \"signin-card\"], [1, \"logo-container\"], [\"src\", \"assets/logo.png\", \"alt\", \"App Logo\", 1, \"app-logo\"], [1, \"signin-title\"], [1, \"signin-subtitle\"], [1, \"signin-form\", 3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"placeholder\", \"Enter your username\", \"formControlName\", \"username\", \"required\", \"\"], [\"matPrefix\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Enter your password\", \"formControlName\", \"password\", \"required\", \"\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"signin-button\", 3, \"disabled\"], [1, \"signup-link\"], [1, \"signup-text\", 3, \"click\"], [1, \"error-message\"]],\n    template: function SigninComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"img\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-card-header\")(5, \"mat-card-title\", 4);\n        i0.ɵɵtext(6, \"Welcome Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-card-subtitle\", 5);\n        i0.ɵɵtext(8, \"Sign in to continue\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"mat-card-content\")(10, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function SigninComponent_Template_form_ngSubmit_10_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(11, \"mat-form-field\", 7)(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 8);\n        i0.ɵɵelementStart(15, \"mat-icon\", 9);\n        i0.ɵɵtext(16, \"person\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, SigninComponent_mat_error_17_Template, 2, 0, \"mat-error\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-form-field\", 7)(19, \"mat-label\");\n        i0.ɵɵtext(20, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 11);\n        i0.ɵɵelementStart(22, \"mat-icon\", 9);\n        i0.ɵɵtext(23, \"lock\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(24, SigninComponent_mat_error_24_Template, 2, 0, \"mat-error\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(25, SigninComponent_div_25_Template, 2, 1, \"div\", 12);\n        i0.ɵɵelementStart(26, \"button\", 13);\n        i0.ɵɵtext(27);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(28, \"mat-card-actions\", 14)(29, \"p\");\n        i0.ɵɵtext(30, \"Don't have an account? \");\n        i0.ɵɵelementStart(31, \"a\", 15);\n        i0.ɵɵlistener(\"click\", function SigninComponent_Template_a_click_31_listener() {\n          return ctx.navigateToSignup();\n        });\n        i0.ɵɵtext(32, \"Sign Up\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"formGroup\", ctx.signinForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.signinForm.get(\"username\")) == null ? null : tmp_1_0.invalid);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.signinForm.get(\"password\")) == null ? null : tmp_2_0.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.signinForm.invalid || ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.loading ? \"Signing In...\" : \"Sign In\", \" \");\n      }\n    },\n    dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i5.MatButton, i6.MatError, i6.MatFormField, i6.MatLabel, i6.MatPrefix, i7.MatInput, i8.MatCard, i8.MatCardHeader, i8.MatCardContent, i8.MatCardTitle, i8.MatCardSubtitle, i8.MatCardActions, i9.MatIcon],\n    styles: [\".signin-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;height:100vh;background:linear-gradient(135deg,#f5f7fa 0%,#c3cfe2 100%)}.signin-card[_ngcontent-%COMP%]{width:450px;padding:30px;border-radius:15px;box-shadow:0 10px 25px #0000001a;text-align:center}.logo-container[_ngcontent-%COMP%]{display:flex;justify-content:center;margin-bottom:20px}.app-logo[_ngcontent-%COMP%]{max-width:150px;height:auto}.signin-title[_ngcontent-%COMP%]{font-size:24px;font-weight:600;color:#333;margin-bottom:10px}.signin-subtitle[_ngcontent-%COMP%]{color:#666;margin-bottom:20px}.signin-form[_ngcontent-%COMP%]{display:flex;flex-direction:column}.signin-form[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{margin-bottom:15px}.error-message[_ngcontent-%COMP%]{color:#f44336;margin-bottom:15px;text-align:center}.signin-button[_ngcontent-%COMP%]{margin-top:15px;padding:12px;font-size:16px}.signup-link[_ngcontent-%COMP%]{margin-top:15px;text-align:center}.signup-text[_ngcontent-%COMP%]{color:#3f51b5;cursor:pointer;font-weight:600}.signup-text[_ngcontent-%COMP%]:hover{text-decoration:underline}\"]\n  });\n  return SigninComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/core\";\n\nfunction SignupComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Username is required (min 3 characters) \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SignupComponent_mat_error_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SignupComponent_mat_error_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password is required (min 6 characters) \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SignupComponent_mat_option_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const role_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", role_r5, \" \");\n  }\n}\n\nfunction SignupComponent_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.error, \" \");\n  }\n}\n\nexport let SignupComponent = /*#__PURE__*/(() => {\n  class SignupComponent {\n    constructor(formBuilder, authService, router) {\n      this.formBuilder = formBuilder;\n      this.authService = authService;\n      this.router = router;\n      this.loading = false;\n      this.error = '';\n      this.roles = ['STUDENT', 'TEACHER'];\n      this.signupForm = this.formBuilder.group({\n        username: ['', [Validators.required, Validators.minLength(3)]],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        role: ['STUDENT', Validators.required]\n      });\n    }\n\n    ngOnInit() {\n      // Redirect if already logged in\n      if (this.authService.isAuthenticated()) {\n        this.navigateBasedOnRole();\n      }\n    }\n\n    onSubmit() {\n      var _a, _b, _c, _d;\n\n      if (this.signupForm.invalid) {\n        return;\n      }\n\n      this.loading = true;\n      this.error = '';\n      const credentials = {\n        username: (_a = this.signupForm.get('username')) === null || _a === void 0 ? void 0 : _a.value,\n        email: (_b = this.signupForm.get('email')) === null || _b === void 0 ? void 0 : _b.value,\n        password: (_c = this.signupForm.get('password')) === null || _c === void 0 ? void 0 : _c.value,\n        role: (_d = this.signupForm.get('role')) === null || _d === void 0 ? void 0 : _d.value\n      };\n      this.authService.signup(credentials).subscribe({\n        next: response => {\n          this.loading = false;\n          this.navigateBasedOnRole();\n        },\n        error: error => {\n          var _a;\n\n          this.loading = false;\n          this.error = ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) || 'Signup failed';\n        }\n      });\n    }\n\n    navigateToSignin() {\n      this.router.navigate(['/signin']);\n    }\n\n    navigateBasedOnRole() {\n      const role = this.authService.getUserRole();\n\n      switch (role) {\n        case 'STUDENT':\n          this.router.navigate(['/student/home']);\n          break;\n\n        case 'TEACHER':\n          this.router.navigate(['/teacher/home']);\n          break;\n\n        default:\n          this.router.navigate(['/']);\n      }\n    }\n\n  }\n\n  SignupComponent.ɵfac = function SignupComponent_Factory(t) {\n    return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  SignupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SignupComponent,\n    selectors: [[\"app-signup\"]],\n    decls: 47,\n    vars: 8,\n    consts: [[1, \"signup-container\"], [1, \"signup-card\"], [1, \"logo-container\"], [\"src\", \"assets/logo.png\", \"alt\", \"App Logo\", 1, \"app-logo\"], [1, \"signup-title\"], [1, \"signup-subtitle\"], [1, \"signup-form\", 3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"placeholder\", \"Choose a username\", \"formControlName\", \"username\", \"required\", \"\"], [\"matPrefix\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"placeholder\", \"Enter your email\", \"formControlName\", \"email\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Create a password\", \"formControlName\", \"password\", \"required\", \"\"], [\"formControlName\", \"role\", \"required\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"signup-button\", 3, \"disabled\"], [1, \"signin-link\"], [1, \"signin-text\", 3, \"click\"], [3, \"value\"], [1, \"error-message\"]],\n    template: function SignupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"img\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-card-header\")(5, \"mat-card-title\", 4);\n        i0.ɵɵtext(6, \"Create Account\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-card-subtitle\", 5);\n        i0.ɵɵtext(8, \"Sign up to get started\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"mat-card-content\")(10, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function SignupComponent_Template_form_ngSubmit_10_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(11, \"mat-form-field\", 7)(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 8);\n        i0.ɵɵelementStart(15, \"mat-icon\", 9);\n        i0.ɵɵtext(16, \"person\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, SignupComponent_mat_error_17_Template, 2, 0, \"mat-error\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-form-field\", 7)(19, \"mat-label\");\n        i0.ɵɵtext(20, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 11);\n        i0.ɵɵelementStart(22, \"mat-icon\", 9);\n        i0.ɵɵtext(23, \"email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(24, SignupComponent_mat_error_24_Template, 2, 0, \"mat-error\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"mat-form-field\", 7)(26, \"mat-label\");\n        i0.ɵɵtext(27, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 12);\n        i0.ɵɵelementStart(29, \"mat-icon\", 9);\n        i0.ɵɵtext(30, \"lock\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(31, SignupComponent_mat_error_31_Template, 2, 0, \"mat-error\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"mat-form-field\", 7)(33, \"mat-label\");\n        i0.ɵɵtext(34, \"Role\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"mat-select\", 13);\n        i0.ɵɵtemplate(36, SignupComponent_mat_option_36_Template, 2, 2, \"mat-option\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"mat-icon\", 9);\n        i0.ɵɵtext(38, \"assignment_ind\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(39, SignupComponent_div_39_Template, 2, 1, \"div\", 15);\n        i0.ɵɵelementStart(40, \"button\", 16);\n        i0.ɵɵtext(41);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(42, \"mat-card-actions\", 17)(43, \"p\");\n        i0.ɵɵtext(44, \"Already have an account? \");\n        i0.ɵɵelementStart(45, \"a\", 18);\n        i0.ɵɵlistener(\"click\", function SignupComponent_Template_a_click_45_listener() {\n          return ctx.navigateToSignin();\n        });\n        i0.ɵɵtext(46, \"Sign In\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        let tmp_3_0;\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"formGroup\", ctx.signupForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.signupForm.get(\"username\")) == null ? null : tmp_1_0.invalid);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.signupForm.get(\"email\")) == null ? null : tmp_2_0.invalid);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.signupForm.get(\"password\")) == null ? null : tmp_3_0.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.signupForm.invalid || ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.loading ? \"Signing Up...\" : \"Sign Up\", \" \");\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i5.MatButton, i6.MatError, i6.MatFormField, i6.MatLabel, i6.MatPrefix, i7.MatInput, i8.MatCard, i8.MatCardHeader, i8.MatCardContent, i8.MatCardTitle, i8.MatCardSubtitle, i8.MatCardActions, i9.MatSelect, i10.MatOption],\n    styles: [\".signup-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;height:100vh;background-color:#f5f5f5}.signup-card[_ngcontent-%COMP%]{width:400px;padding:20px}.signup-form[_ngcontent-%COMP%]{display:flex;flex-direction:column}.signup-form[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{margin-bottom:15px}.error-message[_ngcontent-%COMP%]{color:red;margin-bottom:15px;text-align:center}button[_ngcontent-%COMP%]{margin-top:15px}\"]\n  });\n  return SignupComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}